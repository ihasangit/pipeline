name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  build:
    if: github.event.workflow_run.conclusion == 'success'  # Ensure CI completed
    runs-on: self-hosted

    steps:
    - name: Pull Docker image
      run: sudo docker pull ihasan72/pipeline:latest

    - name: Delete Old docker container
      run: sudo docker rm -f pipeline-container || true

    - name: Security Scan with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "ihasan72/pipeline:latest"
        format: "table"
        ignore-unfixed: true  # Ignore to vulnerabilities that have no fixed version available
        severity: "HIGH,CRITICAL"  # Scan only high & critical vulnerabilities
        exit-code: 0  # Donot not fail the pipeline, just show the warnings and more

    - name: Build Docker Image
      run: docker build -t ihasan72/pipeline:${{ github.sha }} -t ihasan72/pipeline:latest .

    - name: Push Docker Image
      run: |
        docker push ihasan72/pipeline:${{ github.sha }}
        docker push ihasan72/pipeline:latest

    - name: Run Docker Container
      run: sudo docker run -d -p 8080:8080 --name pipeline-container ihasan72/pipeline:latest

    - name: Send Slack Notification (Success)
      if: success()
      run: |
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        curl -X POST -H 'Content-type: application/json' --data '{
          "blocks": [
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Ref*\n<https://github.com/ihasangit/pipeline/tree/${{ github.ref_name }}|${{ github.ref }}>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Event*\n${{ github.event_name }}"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Actions URL*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|CD Pipeline>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${SHORT_SHA}>"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": ":white_check_mark: CD Deployment Successful!\n:tada: The deployment for *ihasan72/pipeline* was successful! :white_check_mark:"
              }
            }
          ]
        }' ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send Slack Notification (Failure)
      if: failure()
      run: |
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        curl -X POST -H 'Content-type: application/json' --data '{
          "blocks": [
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Ref*\n<https://github.com/ihasangit/pipeline/tree/${{ github.ref_name }}|${{ github.ref }}>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Event*\n${{ github.event_name }}"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Actions URL*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|CD Pipeline>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${SHORT_SHA}>"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": ":x: CD Deployment Failed!\n:warning: The deployment for *ihasangit/pipeline* failed! Check GitHub Actions logs."
              }
            }
          ]
        }' ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Pull Docker image
      run: sudo docker pull ihasan72/pipeline:latest

    - name: Deploy
      run: |
        # Add your deployment commands here